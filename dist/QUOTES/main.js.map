{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/date.pipe.ts","webpack:///./src/app/quote-details/quote-details.component.css","webpack:///./src/app/quote-details/quote-details.component.html","webpack:///./src/app/quote-details/quote-details.component.ts","webpack:///./src/app/quote-form/quote-form.component.css","webpack:///./src/app/quote-form/quote-form.component.html","webpack:///./src/app/quote-form/quote-form.component.ts","webpack:///./src/app/quote.ts","webpack:///./src/app/quote/quote.component.css","webpack:///./src/app/quote/quote.component.html","webpack:///./src/app/quote/quote.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"h1{\\n    font-family: 'Indie Flower', cursive;\\n}\\n#form{\\n        color: brown;\\n        align-content: center;\\n        background-image: url('background.jpg')\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxvQ0FBb0M7QUFDeEM7QUFDQTtRQUNRLFlBQVk7UUFDWixxQkFBcUI7UUFDckI7QUFDUiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDF7XG4gICAgZm9udC1mYW1pbHk6ICdJbmRpZSBGbG93ZXInLCBjdXJzaXZlO1xufVxuI2Zvcm17XG4gICAgICAgIGNvbG9yOiBicm93bjtcbiAgICAgICAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaW1hZ2UvYmFja2dyb3VuZC5qcGcpXG59XG4iXX0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n  <link href=\\\"https://fonts.googleapis.com/css?family=Indie+Flower\\\" rel=\\\"stylesheet\\\">\\n  <div class=\\\"container-fluid\\\">\\n      <div style=\\\"text-align:center\\\">\\n          <div class=\\\"jumbotron\\\">\\n          <div class=\\\"card border-info mb-3\\\" style=\\\"max-width: 100%; background-color: blue;\\\">\\n          <div class=\\\"card-header\\\">\\n           <h1>FEED YOUR BRAIN WITH {{ title }}!</h1>\\n        </div>\\n      </div>\\n      </div>\\n  </div>\\n  </div>\\n  <app-quote></app-quote>\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'QUOTES';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule}   from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { QuoteComponent } from './quote/quote.component';\nimport { QuoteFormComponent } from './quote-form/quote-form.component';\nimport { QuoteDetailsComponent } from './quote-details/quote-details.component';\nimport { DatePipe } from './date.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuoteComponent,\n    QuoteFormComponent,\n    QuoteDetailsComponent,\n    DatePipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'date'\n})\nexport class DatePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    let today:Date = new Date();\n    var current = new Date();\n    return current;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1b3RlLWRldGFpbHMvcXVvdGUtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  quote-details works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-quote-details',\n  templateUrl: './quote-details.component.html',\n  styleUrls: ['./quote-details.component.css']\n})\nexport class QuoteDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".input{\\n  \\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcXVvdGUtZm9ybS9xdW90ZS1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEiLCJmaWxlIjoic3JjL2FwcC9xdW90ZS1mb3JtL3F1b3RlLWZvcm0uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbnB1dHtcbiAgXG59Il19 */\"","module.exports = \"<section class=\\\"input\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <form (ngSubmit)='submitQuote()' #quoteForm='ngForm'>\\n                 <div class=\\\"form-group\\\">\\n                    <label for=\\\"name\\\">USER NAME</label>\\n                    <input type=\\\"text\\\"  class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"newQuote.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" required>\\n                 </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"quote\\\">QUOTE</label>\\n                    <input type=\\\"text\\\"  class=\\\"form-control\\\" id=\\\"quote\\\" [(ngModel)]=\\\"newQuote.quote\\\" name=\\\"quote\\\" #quote=\\\"ngModel\\\" required>\\n                 </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"name\\\">AUTHOR</label>\\n                    <input type=\\\"text\\\"  class=\\\"form-control\\\" id=\\\"author\\\" [(ngModel)]=\\\"newQuote.author\\\" name=\\\"author\\\" #author=\\\"ngModel\\\" required>\\n                </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success btn-lg\\\">submit</button>\\n         </form>\\n      </div>\\n    </div>\\n  </div>\\n</section>\"","import { Component, OnInit, Output,EventEmitter} from '@angular/core';\nimport { Quote } from '../quote';\n\n@Component({\n  selector: 'app-quote-form',\n  templateUrl: './quote-form.component.html',\n  styleUrls: ['./quote-form.component.css']\n})\nexport class QuoteFormComponent implements OnInit {\n  newQuote=new Quote(0,\"\",\"\",\"\",new Date());\n  \n  @Output() addQuote=new EventEmitter<Quote>();\n\n  submitQuote(){\n    this.addQuote.emit(this.newQuote);\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Quote {\n    constructor(public id:number, public name:string, public author:string, public quote:string, public date:Date){}\n}\n","module.exports = \".output{\\n    border: thick double #32a1ce;\\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcXVvdGUvcXVvdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDRCQUE0Qjs7QUFFaEMiLCJmaWxlIjoic3JjL2FwcC9xdW90ZS9xdW90ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm91dHB1dHtcbiAgICBib3JkZXI6IHRoaWNrIGRvdWJsZSAjMzJhMWNlO1xuXG59XG4iXX0= */\"","module.exports = \"<div class=\\\"panel-body\\\">\\n    <div class=\\\"container\\\">\\n        <app-quote-form (addQuote)=\\\"addNewQuote($event)\\\"></app-quote-form>\\n    </div>\\n</div>\\n     <br>\\n    <link href=\\\"https://fonts.googleapis.com/css?family=Indie+Flower|Playfair+Display\\\" rel=\\\"stylesheet\\\">\\n    <section class=\\\"output\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div *ngFor=\\\"let quote of quotes; let i = index\\\" class=\\\"col-md-6 no-pad\\\">\\n                    <p>Submitted by:{{quote.name}}</p>\\n                    <P>Quote:{{quote.quote}}</P>\\n                    <p>Auother: {{quote.author}}</p>\\n                    <p>{{quote.date}}</p>\\n                    <button (click) = 'quoteDelete(true)' class=\\\"btn btn-danger btn-lg\\\"> Delete Quote </button>\\n                </div>\\n            </div>\\n        </div>\\n    </section>\"","import { Component, OnInit } from '@angular/core';\n\nimport {Quote} from '../quote'\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: ['./quote.component.css']\n})\nexport class QuoteComponent implements OnInit {\n  quotes=[]\n\n  addNewQuote(quote){\n    let quoteLength = this.quotes.length;\n\n    quote.id=quoteLength+1;\n\n    quote.completeDate = new Date(quote.completeDate)\n\n    this.quotes.push(quote)\n    \n  }\n\n  constructor() { }\n  \n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}